#!/usr/bin/python
__doc__ = 'PLOTEOS -- produce diagnostic plot of EoS data for EoS1, EoS2, ... in [pressurec2,energy_densityc2,baryon_density] [g/cm^3] csv format'
__usage__ = 'ploteos EoS1.csv,EoS2.csv,...'
__author__ = 'philippe.landry@ligo.org'
__date__ = '09-2018'

import numpy as np
from optparse import OptionParser
from constants import *
from pltsetup import *

parser = OptionParser(usage=__usage__, description=__doc__)
parser.add_option('-x', '--xvar', default='rho', help='which fluid variable (rho, mu or p) to plot on x-axis, DEFAULT=rho', metavar='rho')
parser.add_option('-u', '--units', default='cgs', help='units (cgs or rhonuc) for fluid variables on plot, DEFAULT=cgs', metavar='cgs')
parser.add_option('-l', '--lims', default='', help='comma-separated x and y ranges for plot in units of -u option, DEFAULT=Automatic', metavar='1e12,1e17,1e12,1e17')
parser.add_option('-d', '--dir', default='./dat/eos/', help='path to directory housing EoS data, DEFAULT=./dat/eos/', metavar='./dat/eos/')
parser.add_option('-o', '--outdir', default='./plt/', help='path to output directory, DEFAULT=./plt/', metavar='./plt/')
parser.add_option('-t', '--tag', default='', help='tag to append to output filename, DEFAULT=None', metavar='""')
parser.add_option('-f', '--pltname', default='eosplot', help='plot output filename (automatically appends .png), DEFAULT=eosplot', metavar='eosplot')

opts, args = parser.parse_args()
eosnames = str(args[0]).split(',')
xvar = str(opts.xvar)
units = str(opts.units)
lims = str(opts.lims).split(',')
indir = str(opts.dir)
outdir = str(opts.outdir)
tag = str(opts.tag)
pltname = str(opts.pltname)

plt.figure(1)
fvarlabels = {'rho': r'$\rho \, [\mathrm{g/cm}^3]$','p': r'$p \, [\mathrm{g/cm}^3]$','mu': r'$\mu \, [\mathrm{g/cm}^3]$','cs2': r'${c_s}^2 \, [\mathrm{m/s}^2]$'}
unitlabels = {'cgs': r'$[\mathrm{g/cm}^3]$','rhonuc': r'$[\rho_{\mathrm{nuc}}]$'}
plt.xlabel(fvarlabels[xvar])
plt.ylabel(unitlabels[units])
if len(lims) > 1: plt.xlim(float(lims[0]),float(lims[1]))
if len(lims) > 2: plt.ylim(float(lims[2]),float(lims[3]))

# LOAD EOS DATA FOR EACH MODEL AND CONVERT TO SPECIFIED UNITS

i=0
for eosname in eosnames:

	shortname = eosname.split('.')[0]

	eospath = indir+eosname
	eosdat = np.genfromtxt(eospath,names=True,delimiter=',')
	rhodat = eosdat['baryon_density'] # rest-mass energy density in units of g/cm^3
	pdat = eosdat['pressurec2'] # pressure in units of g/cm^3
	mudat = eosdat['energy_densityc2'] # total energy density in units of g/cm^3
	cs2dat = np.gradient(pdat,mudat) # sound speed squared in units of c^2
	
	if units == 'rhonuc': # convert to units of rhonuc
	
		rhodat = rhodat/rhonuc # rho in units of rhonuc
		pdat = pdat/rhonuc # p in units of rhonuc
		mudat = mudat/rhonuc # mu in units of rhonuc
		
		fvarlabels = {'rho': r'$\rho \, [\rho_{\mathrm{nuc}}]$','p': r'$p \, [\rho_{\mathrm{nuc}}]$','mu': r'$\mu \, [\rho_{\mathrm{nuc}}]$','cs2': r'${c_s}^2 \, [c^2]$'}
		
	else: # or keep in cgs, but put cs2 in units of m/s^2 so it shows up on same scale
	
		cs2dat = cs2dat*1e-4*c**2 # sound speed squared in units of m/s^2

	fvars = ['rho','p','mu','cs2']
	fvars.remove(xvar)
	dat = {'rho': rhodat,'p': pdat,'mu': mudat,'cs2': cs2dat}

# PLOT EOS DATA VS SPECIFIED FLUID VARIABLE

	plt.title('EoS data '+fvars[0]+' (o), '+fvars[1]+' (+), '+fvars[2]+' (Y)')
	
	plt.loglog(dat[xvar],dat[fvars[0]],lw=0,color=AUTO_COLORS[i],label=shortname,ls='-',marker='.')
	plt.loglog(dat[xvar],dat[fvars[1]],lw=0,color=AUTO_COLORS[i],ls='--',marker='+')
	plt.loglog(dat[xvar],dat[fvars[2]],lw=0,color=AUTO_COLORS[i],ls='-',marker='1')
	
	i = i+1

plt.legend(loc=0)
plt.savefig(outdir+pltname+tag+'.png')

