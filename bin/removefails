#!/usr/bin/python
__doc__ = 'REMOVEFAILS -- drop EoSs with no surface found from samples csv file'
__usage__ = 'removefails SAMP.csv [-d ./dat/] [-o ./dat/] [-r 30.0]'
__author__ = 'philippe.landry@ligo.org'
__date__ = '06-2019'

import numpy as np
from optparse import OptionParser
import glob
from nsstruc.macro import macro

parser = OptionParser(usage=__usage__, description=__doc__)
parser.add_option('-r', '--failradius', default=30.0, help='radius printed by getnsprops if surface not found', metavar='RADIUS')
parser.add_option('-d', '--dir', default='./dat/', help='path to directory housing properties files, DEFAULT=./dat/', metavar='./dat/')
parser.add_option('-o', '--outdir', default='./dat/', help='output path for new samples file, DEFAULT=./dat/', metavar='./dat/')
parser.add_option('-t', '--tag', default='_nofails', help='tag for output data file, DEFAULT=_nofails', metavar='_TAG')

opts, args = parser.parse_args()
sampfile = str(args[0])
rfail = float(opts.failradius)
indir = str(opts.dir)
outdir = str(opts.outdir)
tag = str(opts.tag)

# READ INPUT SAMPLES FILE

samppath = indir+'/'+sampfile
sampdat = np.genfromtxt(samppath,delimiter=',',names=True,dtype=None)

R1list = sampdat['R1']
R2list = sampdat['R2']

with open(samppath) as infile:

	line = infile.readlines()

outfile = open(outdir+'/'+sampfile.split('.')[0]+tag+'.csv',"w")
	
# CHECK FOR FAILS
	
for i in range(len(R1list)):

	if R1list[i] == rfail and R2list[i] == rfail:	continue
	
	else:
	
		outfile.write(line[i+1])

