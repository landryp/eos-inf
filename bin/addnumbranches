#!/usr/bin/python
__doc__ = 'ADDNUMBRANCHES -- add number of stable branches column to weighted samples csv file'
__usage__ = 'addnumbranches SAMPweights.csv [-v] [-o ./dat/]'
__author__ = 'philippe.landry@ligo.org'
__date__ = '06-2019'

import numpy as np
from optparse import OptionParser
import glob

parser = OptionParser(usage=__usage__, description=__doc__)
parser.add_option('-m', '--mod', default=1000, help='number of draws per subfolder, DEFAULT=1000', metavar='MOD')
parser.add_option('-d', '--dir', default='./dat/', help='path to directory housing properties files, DEFAULT=./dat/', metavar='./dat/')
parser.add_option('-o', '--outdir', default='./dat/', help='output path for new samples file, DEFAULT=./dat/', metavar='./dat/')
parser.add_option('-t', '--tag', default='_branches', help='tag for output data file, DEFAULT=_branches', metavar='_branches')

opts, args = parser.parse_args()
sampfile = str(args[0])
mod = int(opts.mod)
indir = str(opts.dir)
outdir = str(opts.outdir)
tag = str(opts.tag)

outfile = open(outdir+'/'+sampfile.split('.')[0]+tag+'.csv',"w")

# READ INPUT WEIGHTED SAMPLES FILE

sampdat = np.genfromtxt(indir+'/'+sampfile,delimiter=',',names=True,dtype=None)
sampcols = list(sampdat.dtype.names)

if not 'branches' in sampcols:

	sampcols.append('branches')
	eoslist = sampdat['EoS']

# APPEND NUMBER OF BRANCHES COLUMN AND SAVE

	dat = np.zeros((len(sampdat['EoS']),len(sampcols)))
	for i in range(len(sampcols)):

		col = sampcols[i]
	
		if col == 'branches':	
	
			for k in range(len(sampdat['EoS'])):
	
				eos = eoslist[k]
				num = str(k/mod).zfill(6)
				num2 = str(k).zfill(6)
				path = indir+'/DRAWmod'+str(mod)+'-'+str(num)+'/MACROdraw-'+str(num2)
				brancheslist = glob.glob(path+"/MACROdraw-*.csv")			
				
				numbranches = len(brancheslist)
			
				dat[k,i] = numbranches
	
		else:	dat[:,i] = sampdat[col]

	colslist = [str(j) for j in range(len(sampcols))]
	colslist = '{'+'},{'.join(colslist)+'} \n'

	outfile.write(','.join(sampcols)+' \n')
	for l in range(len(sampdat['EoS'])):

		datstr = ['{0}'.format(dati) for dati in dat[l,:]]

		outfile.write(','.join(datstr)+' \n')

