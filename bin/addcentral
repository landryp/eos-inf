#!/usr/bin/python
__doc__ = 'ADDCENTRALS -- add central densities or pressures of star to weighted samples csv file'
__usage__ = 'addcentrals SAMPweights.csv [-m 1000] [-d ./dat/] [-o ./dat/] [-p pc1]'
__author__ = 'philippe.landry@ligo.org'
__date__ = '06-2019'

import numpy as np
from optparse import OptionParser
from scipy.interpolate import interp1d
import glob
from nsstruc.macro import macro

parser = OptionParser(usage=__usage__, description=__doc__)
parser.add_option('-p', '--props', default='pc1', help='central values to append, DEFAULT="pc1"', metavar='CENTRAL_VAL')
parser.add_option('-m', '--mod', default=1000, help='number of draws per subfolder, DEFAULT=1000', metavar='MOD')
parser.add_option('-d', '--dir', default='./dat/', help='path to directory housing EoS files, DEFAULT=./dat/', metavar='./dat/')
parser.add_option('-i', '--indir', default='./dat/', help='path to directory housing samples file, DEFAULT=./dat/', metavar='./dat/')
parser.add_option('-o', '--outdir', default='./dat/', help='output path for new samples file, DEFAULT=./dat/', metavar='./dat/')
parser.add_option('-t', '--tag', default='_central', help='tag for output data file, DEFAULT=_central', metavar='_central')

opts, args = parser.parse_args()
sampfile = str(args[0])
prop = str(opts.props)
var = prop.split('c')[0]
star = prop.split('c')[-1]
mod = int(opts.mod)
dbdir = str(opts.dir)
indir = str(opts.indir)
outdir = str(opts.outdir)
tag = str(opts.tag)

varkeys = {'p': 'pressurec2','e': 'energy_densityc2'}

# READ INPUT WEIGHTED SAMPLES FILE

sampdat = np.genfromtxt(indir+'/'+sampfile,delimiter=',',names=True,dtype=None)
sampcols = list(sampdat.dtype.names)

label = prop

if not label in sampcols:

	sampcols.append(label)
	eoslist = sampdat['EoS']
	rhoclist = sampdat['rhoc'+star]

# APPEND PROPERTY AND SAVE

	dat = np.zeros((len(sampdat['EoS']),len(sampcols)))
	for i in range(len(sampcols)):

		col = sampcols[i]
	
		if col == label:	
	
			for k in range(len(sampdat['EoS'])):
	
				eos = int(eoslist[k])
				rhoc = float(rhoclist[k])
					
				num = str(eos/mod).zfill(6)
				num2 = str(eos).zfill(6)
				path = dbdir+'/DRAWmod'+str(mod)+'-'+str(num)+'/eos-draw-'+str(num2)+'.csv'
				eosdat = np.genfromtxt(path,delimiter=',',names=True,dtype=None)
				rhodat = eosdat['baryon_density']
				vardat = eosdat[varkeys[var]]
				
				eosfunc = interp1d(rhodat,vardat,kind='linear',bounds_error=False,fill_value=0)
				
				val = eosfunc(rhoc)
				
				dat[k,i] = val
	
		else:	dat[:,i] = sampdat[col]

	colslist = [str(j) for j in range(len(sampcols))]
	colslist = '{'+'},{'.join(colslist)+'} \n'

	outfile = open(outdir+'/'+sampfile.split('.')[0]+tag+'.csv',"w")

	outfile.write(','.join(sampcols)+' \n')
	for l in range(len(sampdat['EoS'])):

		datstr = ['{0}'.format(dati) for dati in dat[l,:]]

		outfile.write(','.join(datstr)+' \n')

